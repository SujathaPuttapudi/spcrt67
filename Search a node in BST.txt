Search a node in BST:

class Node:
    def __init__(self,x):
        self.data=x
        self.right=None
        self.left=None
        
    def insert(self,x):
        if self.data==None:
            self.data=x
            return
        if self.data>x:
            if self.left==None:
                self.left=Node(x)
            else:
                self.left.insert(x)
        else:
            if self.right is None:
                self.right=Node(x)
            else:
                self.right.insert(x)
    def show(self):
        if self.left:
            self.left.show()
        print(self.data,end=" ")
        if self.right:
            self.right.show()
    def search(self,sno):
        if self.data==sno:
            print("search element is  found")
            return
        if self.data>sno:
            if self.left:
                self.left.search(sno)
            else:
                print("search element is not found")
        else:
            if self.right:
                self.right.search(sno)
            else:
                print("search element is not found")
            
root=Node(40)

while True:
    print()
    print("1.Insert\n 2.Show\n 3.Search\n 4.Exit")
    ch=int(input("Choice: "))
    if ch==1:
        x=int(input("Data: "))
        root.insert(x)
    elif ch==2:
        root.show()
    elif ch==3:
        sno=int(input("search: "))
        root.search(sno)
    elif ch==4:
        exit
    else:
        print("Invalid choice")

